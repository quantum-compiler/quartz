cmake_minimum_required(VERSION 3.16)
project(quantum-superoptimization)

set(CMAKE_CXX_STANDARD 17)
set(CMAKE_BUILD_TYPE "Debug")

set(USE_ARBLIB FALSE)

if(USE_ARBLIB)
    macro (add_executable _name)
        # invoke built-in add_executable
        _add_executable(${ARGV})
        if (TARGET ${_name})
            target_link_libraries(${_name} flint flint-arb gmp)
        endif()
    endmacro()
    add_compile_definitions(USE_ARBLIB)
endif()

file(GLOB_RECURSE TEST_ALL "test/test_all.cpp")
file(GLOB_RECURSE TEST_ARB "test/test_arb.cpp")
file(GLOB_RECURSE TEST_BFS "test/test_bfs.cpp")
file(GLOB_RECURSE TEST_CONTEXT_SHIFT "test/test_context_shift.cpp")
file(GLOB_RECURSE TEST_EQUIV_SET "test/test_equivalence_set.cpp")
file(GLOB_RECURSE TEST_GENERATOR "test/test_generator.cpp")
file(GLOB_RECURSE TEST_GRAPH_TO_QASM "test/test_graph_to_qasm.cpp")
file(GLOB_RECURSE TEST_OPTIMIZATION "test/test_optimization.cpp")
file(GLOB_RECURSE TEST_OPTIMIZATION_SA "test/test_optimization_sa.cpp")
file(GLOB_RECURSE TEST_PHASE_SHIFT "test/test_phase_shift.cpp")
file(GLOB_RECURSE TEST_PRUNING "test/test_pruning.cpp")
file(GLOB_RECURSE TEST_QUARTZ "test/test_quartz.cpp")
file(GLOB_RECURSE TEST_RIGETTI "test/test_rigetti.cpp")
file(GLOB_RECURSE TEST_ROTATION_MERGING "test/test_rotation_merging.cpp")
file(GLOB_RECURSE TEST_TOFFOLI_FLIP "test/test_toffoli_flip.cpp")
file(GLOB_RECURSE SOURCE "context/*" "dag/*" "dataset/*" "gate/*" "generator/*" "math/*" "utils/*" "verifier/*" "tasograph/*")
add_executable(test_all ${TEST_ALL} ${SOURCE})
add_executable(test_arb ${TEST_ARB} ${SOURCE})
add_executable(test_bfs ${TEST_BFS} ${SOURCE})
add_executable(test_context_shift ${TEST_CONTEXT_SHIFT} ${SOURCE})
add_executable(test_equiv_set ${TEST_EQUIV_SET} ${SOURCE})
add_executable(test_generator ${TEST_GENERATOR} ${SOURCE})
add_executable(test_graph_to_qasm ${TEST_GRAPH_TO_QASM} ${SOURCE})
add_executable(test_optimization ${TEST_OPTIMIZATION} ${SOURCE})
add_executable(test_optimization_sa ${TEST_OPTIMIZATION_SA} ${SOURCE})
add_executable(test_phase_shift ${TEST_PHASE_SHIFT} ${SOURCE})
add_executable(test_pruning ${TEST_PRUNING} ${SOURCE})
add_executable(test_quartz ${TEST_QUARTZ} ${SOURCE})
add_executable(test_rigetti ${TEST_RIGETTI} ${SOURCE})
add_executable(test_rotation_merging ${TEST_ROTATION_MERGING} ${SOURCE})
add_executable(test_toffoli_flip ${TEST_TOFFOLI_FLIP} ${SOURCE})
