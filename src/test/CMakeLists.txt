include_directories(${CMAKE_INCLUDE_PATH})
include_directories("..")

link_directories("../..")

file(GLOB_RECURSE GEN_ECC_SET "gen_ecc_set.cpp")
file(GLOB_RECURSE TEST_ALL "test_all.cpp")
file(GLOB_RECURSE TEST_BFS "test_bfs.cpp")
file(GLOB_RECURSE TEST_CONTEXT_SHIFT "test_context_shift.cpp")
file(GLOB_RECURSE TEST_EQUIV_SET "test_equivalence_set.cpp")
file(GLOB_RECURSE TEST_GENERATOR "test_generator.cpp")
file(GLOB_RECURSE TEST_GRAPH_TO_QASM "test_graph_to_qasm.cpp")
file(GLOB_RECURSE TEST_OPTIMIZATION_STEPS "test_optimization_steps.cpp")
file(GLOB_RECURSE TEST_PHASE_SHIFT "test_phase_shift.cpp")
file(GLOB_RECURSE TEST_PRUNING "test_pruning.cpp")
file(GLOB_RECURSE TEST_QUARTZ "test_quartz.cpp")
file(GLOB_RECURSE TEST_RIGETTI "test_rigetti.cpp")
file(GLOB_RECURSE TEST_REMOVE_SWAP "test_remove_swap.cpp")
file(GLOB_RECURSE TEST_ROTATION_MERGING "test_rotation_merging.cpp")
file(GLOB_RECURSE TEST_SIMULATION "test_simulation.cpp")
file(GLOB_RECURSE TEST_SPARSITY "test_sparsity.cpp")
file(GLOB_RECURSE TEST_TOFFOLI_FLIP "test_toffoli_flip.cpp")
file(GLOB_RECURSE TEST_APPLY_XFER "test_apply_xfer.cpp")
file(GLOB_RECURSE TEST_IBMQ "test_ibmq.cpp")
file(GLOB_RECURSE TEST_NAM "test_nam.cpp")
file(GLOB_RECURSE TEST_IBMQ_TD_DISABLED "test_ibmq_td_disabled.cpp")
file(GLOB_RECURSE TEST_NAM_TD_DISABLED "test_nam_td_disabled.cpp")
file(GLOB_RECURSE TEST_RIGETTI_TD_DISABLED "test_rigetti_td_disabled.cpp")
file(GLOB_RECURSE TEST_APPLIABLE_XFER "test_appliable_xfer.cpp")
file(GLOB_RECURSE TEST_FROM_AND_TO_QASM "test_from_and_to_qasm.cpp")
file(GLOB_RECURSE TEST_OPTIMIZE "test_optimize.cpp")
file(GLOB_RECURSE TEST_CREATE_GRAPHXFER_FROM_QASM "test_create_graphXfer_from_qasm.cpp")
file(GLOB_RECURSE TEST_PARTITION "test_partition.cpp")
if(USE_ARBLIB)
    file(GLOB_RECURSE TEST_ARB "test_arb.cpp")
endif()

# add_library(libquartz_runtime SHARED IMPORTED)
# set_property(TARGET libquartz_runtime PROPERTY IMPORTED_LOCATION "../libquartz_runtime.so")

add_executable(gen_ecc_set ${GEN_ECC_SET})
add_executable(test_all ${TEST_ALL} )
add_executable(test_bfs ${TEST_BFS} )
add_executable(test_context_shift ${TEST_CONTEXT_SHIFT} )
add_executable(test_equiv_set ${TEST_EQUIV_SET} )
add_executable(test_generator ${TEST_GENERATOR} )
add_executable(test_graph_to_qasm ${TEST_GRAPH_TO_QASM} )
add_executable(test_optimization_steps ${TEST_OPTIMIZATION_STEPS} )
add_executable(test_phase_shift ${TEST_PHASE_SHIFT} )
add_executable(test_pruning ${TEST_PRUNING} )
add_executable(test_quartz ${TEST_QUARTZ} )
add_executable(test_rigetti ${TEST_RIGETTI} )
add_executable(test_remove_swap ${TEST_REMOVE_SWAP} )
add_executable(test_simulation ${TEST_SIMULATION} )
add_executable(test_sparsity ${TEST_SPARSITY} )
add_executable(test_rotation_merging ${TEST_ROTATION_MERGING} )
add_executable(test_toffoli_flip ${TEST_TOFFOLI_FLIP} )
add_executable(test_apply_xfer ${TEST_APPLY_XFER} )
add_executable(test_ibmq ${TEST_IBMQ} )
add_executable(test_nam ${TEST_NAM} )
add_executable(test_ibmq_td_disabled ${TEST_IBMQ_TD_DISABLED} )
add_executable(test_nam_td_disabled ${TEST_NAM_TD_DISABLED} )
add_executable(test_rigetti_td_disabled ${TEST_RIGETTI_TD_DISABLED} )
add_executable(test_appliable_xfer ${TEST_APPLIABLE_XFER} )
add_executable(test_from_and_to_qasm ${TEST_FROM_AND_TO_QASM} )
add_executable(test_optimize ${TEST_OPTIMIZE} )
add_executable(test_create_graphXfer_from_qasm ${TEST_CREATE_GRAPHXFER_FROM_QASM} )
add_executable(test_partition ${TEST_PARTITION} )
if(USE_ARBLIB)
    add_executable(test_arb ${TEST_ARB} )
endif()
